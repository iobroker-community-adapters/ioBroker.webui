import { assetsPath } from "../../../../../Constants.js";
const offset = 10;
export class ZoomToElementContextMenu {
    shouldProvideContextmenu(event, designerCanvas, designItem, initiator) {
        return designItem !== null;
    }
    provideContextMenuItems(event, designerCanvas, designItem) {
        return [
            {
                title: 'zoom to', icon: `<img src="${assetsPath + 'icons/zoomIn.svg'}">`, action: () => {
                    const coord = designerCanvas.getNormalizedElementCoordinates(designItem.element);
                    const startPoint = { x: coord.x - offset, y: coord.y - offset };
                    const endPoint = { x: coord.x + coord.width + offset, y: coord.y + coord.height + offset };
                    let rect = {
                        x: startPoint.x < endPoint.x ? startPoint.x : endPoint.x,
                        y: startPoint.y < endPoint.y ? startPoint.y : endPoint.y,
                        width: Math.abs(startPoint.x - endPoint.x),
                        height: Math.abs(startPoint.y - endPoint.y),
                    };
                    let zFactorWidth = designerCanvas.outerRect.width / rect.width;
                    let zFactorHeight = designerCanvas.outerRect.height / rect.height;
                    let zoomFactor = zFactorWidth >= zFactorHeight ? zFactorHeight : zFactorWidth;
                    designerCanvas.zoomPoint({ x: coord.x + coord.width / 2, y: coord.y + coord.height / 2 }, zoomFactor);
                }
            },
        ];
    }
}
//# sourceMappingURL=ZoomToElementContextMenu.js.map