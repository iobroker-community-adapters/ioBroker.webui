import { CommandType } from '../../../../../commandHandling/CommandType.js';
import { NodeType } from '../../../../item/NodeType.js';
import { assetsPath } from '../../../../../Constants.js';
export class ZMoveContextMenu {
    shouldProvideContextmenu(event, designerView, designItem, initiator) {
        return !designItem?.isRootItem && designItem?.nodeType == NodeType.Element;
    }
    provideContextMenuItems(event, designerView, designItem) {
        return [
            { title: 'to front', icon: `<img style="rotate: 90deg" src="${assetsPath + 'icons/moveFirst.svg'}">`, action: () => { designerView.executeCommand({ type: CommandType.moveToFront }); } },
            { title: 'move forward', icon: `<img style="rotate: 90deg" src="${assetsPath + 'icons/moveLeft.svg'}">`, action: () => { designerView.executeCommand({ type: CommandType.moveForward }); } },
            { title: 'move backward', icon: `<img style="rotate: 270deg" src="${assetsPath + 'icons/moveLeft.svg'}">`, action: () => { designerView.executeCommand({ type: CommandType.moveBackward }); } },
            { title: 'to back', icon: `<img style="rotate: 270deg" src="${assetsPath + 'icons/moveFirst.svg'}">`, action: () => { designerView.executeCommand({ type: CommandType.moveToBack }); } },
        ];
    }
}
//# sourceMappingURL=ZMoveContextMenu.js.map