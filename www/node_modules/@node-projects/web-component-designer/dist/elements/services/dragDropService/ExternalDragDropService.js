import { DesignItem } from '../../item/DesignItem.js';
import { InsertAction } from "../undoService/transactionItems/InsertAction.js";
export class ExternalDragDropService {
    dragOver(event) {
        if (event.dataTransfer.items[0].type.startsWith('image/'))
            return 'copy';
        return 'none';
    }
    async drop(designerCanvas, event) {
        if (event.dataTransfer.files[0].type.startsWith('image/')) {
            let di = await DesignItem.createDesignItemFromImageBlob(designerCanvas.serviceContainer, designerCanvas.instanceServiceContainer, event.dataTransfer.files[0]);
            let grp = di.openGroup("Insert of &lt;img&gt;");
            di.setStyle('position', 'absolute');
            const coord = designerCanvas.getNormalizedEventCoordinates(event);
            di.setStyle('top', coord.y + 'px');
            di.setStyle('left', coord.x + 'px');
            designerCanvas.instanceServiceContainer.undoService.execute(new InsertAction(designerCanvas.rootDesignItem, designerCanvas.rootDesignItem.childCount, di));
            grp.commit();
            requestAnimationFrame(() => designerCanvas.instanceServiceContainer.selectionService.setSelectedElements([di]));
        }
    }
}
//# sourceMappingURL=ExternalDragDropService.js.map